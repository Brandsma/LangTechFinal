class Query(object):
	query = ""
	replaceDictionary = {}
	i = 0
	n = []
	totalN = 1;
	MAX_OPTIONS = 3

	def __init__(self, query, replaceDictionary):
		self.query = query
		self.replaceDictionary = replaceDictionary
		
	def countCombinations():
		self.replaceDictionary
		for k, v in self.replaceDictionary.items():
			if len(v[1]) > self.MAX_OPTIONS:
				self.n[k] += self.MAX_OPTIONS
			else:
				self.n[k] += len(v[1])

			self.totalN *= self.n[k]

	def getNext():
		j = 0
		m = i	
		query1 = self.query
		for k, v in replaceDictionary.items():
			#print(k, ", ", v[m%self.n[k]])
			#print(query)
			query1 = query1.replace(k, v[0] + v[1][m%self.n[k]])#"wd:"+v[m%3])
			j += 1
			m = int(m/self.n[k])
		return query1

	def hasNext():
		return i < totalN
